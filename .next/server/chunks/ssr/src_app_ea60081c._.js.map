{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/conap/OneDrive/Documentos/Estudo-Eric/NextJS/src/app/mock-users/page.tsx"],"sourcesContent":["import { revalidatePath } from \"next/cache\";\r\ntype MockUser = {\r\n    id: number;\r\n    name: string;\r\n};\r\n\r\nexport default async function MockUsers() {\r\n    const res = await fetch(\"https://67ddc38c471aaaa742827861.mockapi.io/Users\");\r\n    const users = await res.json();\r\n\r\n    async function AddUser(formData:FormData) {\r\n        \"use server\"\r\n        const name = formData.get(\"name\")\r\n        const res = await fetch(\"https://67ddc38c471aaaa742827861.mockapi.io/Users\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n                \r\n            },\r\n            body: JSON.stringify({name}),\r\n        } \r\n        );\r\n        const newUser = await res.json();\r\n        revalidatePath(\"/mock-users\")\r\n        console.log(newUser);\r\n    }\r\n\r\n    return (\r\n        <div className=\"py-10\">\r\n            <form  action = {AddUser} className=\"mb-4\">\r\n                <input type=\"text\" name = \"name\" required className=\"border p-2 mr-2\"/>\r\n                <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">Adicionar usu√°rio</button>\r\n            </form>\r\n            <div className=\"grid grid-cols-4 gap-4 py-10\">\r\n                {users.map((user: MockUser) => (\r\n                    <div key={user.id} className=\"p-4 bg-white shadow-md rounded-lg text-gray-700\">\r\n                        {user.name}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;;;;AAAA;;;;;MAUI,uCAeD,GAfC,wBAAA,eAAe,QAAQ,QAAiB;IAEpC,MAAM,OAAO,SAAS,GAAG,CAAC;IAC1B,MAAM,MAAM,MAAM,MAAM,qDAAqD;QACzE,QAAQ;QACR,SAAS;YACL,gBAAgB;QAEpB;QACA,MAAM,KAAK,SAAS,CAAC;YAAC;QAAI;IAC9B;IAEA,MAAM,UAAU,MAAM,IAAI,IAAI;IAC9B,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;IACf,QAAQ,GAAG,CAAC;AAChB;AAnBW,eAAe;IAC1B,MAAM,MAAM,MAAM,MAAM;IACxB,MAAM,QAAQ,MAAM,IAAI,IAAI;QAEb,UAAf,+OAAA;IAiBA,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAM,QAAU;gBAAS,WAAU;;kCAChC,8OAAC;wBAAM,MAAK;wBAAO,MAAO;wBAAO,QAAQ;wBAAC,WAAU;;;;;;kCACpD,8OAAC;wBAAO,MAAK;wBAAS,WAAU;kCAA2C;;;;;;;;;;;;0BAE/E,8OAAC;gBAAI,WAAU;0BACV,MAAM,GAAG,CAAC,CAAC,qBACR,8OAAC;wBAAkB,WAAU;kCACxB,KAAK,IAAI;uBADJ,KAAK,EAAE;;;;;;;;;;;;;;;;AAOrC","debugId":null}}]
}